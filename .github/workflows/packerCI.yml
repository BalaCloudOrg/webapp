name: packerCI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  packer-format:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Verifies the format of Packer files
        run: packer fmt -check packer/templates/template.pkr.hcl

  packer-validate:
    if: github.event_name == 'pull_request'
    needs: [packer-format]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

        # The presence of this zip in the root directory is required for packer validate
        # since in the file provisioner of the main packer excepts to find a zip file
        # ../../zipfile to build the custom image
      - name: Zip application code
        run: zip -r test-src.zip .

      - name: Packer init - get plugins
        run: packer init .
        working-directory: "./packer/templates"

      - name: Validate Packer template
        run: packer validate .
        working-directory: "./packer/templates"

      - name: Clear up the application zip file
        run: rm -rf test-src.zip

  packer-build:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Zip application code
        run: zip -r test-src.zip .

      - name: "GCloud auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"

      - name: "Set up GCloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Packer init - get plugins
        run: packer init .
        working-directory: "./packer/templates"

      - name: Prepare environment variables
        run: echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Build Packer image
        run: packer build -var "project_id=${{ secrets.GCP_PROJECT_ID }}" -var "image_name=dev-centos-stream8-image-${{ env.TIMESTAMP }}" template.pkr.hcl
        working-directory: "./packer/templates"
